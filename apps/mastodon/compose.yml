services:
  db:
    # restart: always
    image: postgres:14-alpine
    restart: unless-stopped
    shm_size: 256mb
    # networks:
    #   - internal_network
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'mastodon', '-d', 'mastodon_production']
    volumes:
      - ./postgres14:/var/lib/postgresql/data
    environment:
      - 'POSTGRES_HOST_AUTH_METHOD=trust'
      - 'POSTGRES_USER=mastodon'
      - 'POSTGRES_DB=mastodon_production'

  db-backup:
    # restart: always
    image: ghcr.io/sekai-soft/postgres-backup-s3:15
    restart: unless-stopped
    # networks:
    #   - external_network
    #   - internal_network
    volumes:
     - ./post-backup.sh:/post.sh
    env_file:
      - env-backup
    environment:
      SCHEDULE: '@daily'
      BACKUP_KEEP_DAYS: 14
      POSTGRES_HOST: db
      POSTGRES_DATABASE: mastodon_production
      POSTGRES_USER: mastodon
      POSTGRES_PASSWORD: doesntmatter

  redis:
    # restart: always
    image: redis:7-alpine
    restart: unless-stopped
    # networks:
    #   - internal_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - ./redis:/data

  web:
    # build: .
    image: ghcr.io/sekai-soft/mastodon:v4.3.4-kt
    # restart: always
    restart: unless-stopped
    # env_file: env
    container_name: mastodon
    env_file:
      - env
      - env-mastodon-shared
    command: bundle exec puma -C config/puma.rb
    # networks:
    #   - external_network
    #   - internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL',"curl -s --noproxy localhost localhost:3000/health | grep -q 'OK' || exit 1"]
    # ports:
    #   - '127.0.0.1:3000:3000'
    depends_on:
      - db
      - redis
    volumes:
      - ./public/system:/mastodon/public/system

  streaming:
    # build: .
    image: ghcr.io/sekai-soft/mastodon-streaming:v4.3.4-kt
    # restart: always
    restart: unless-stopped
    # env_file: env
    env_file:
      - env
      - env-mastodon-shared
    command: node ./streaming/index.js
    # networks:
    #   - external_network
    #   - internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', "curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1"]
    # ports:
    #   - '127.0.0.1:4000:4000'
    depends_on:
      - db
      - redis

  sidekiq:
    # build: .
    image: ghcr.io/sekai-soft/mastodon:v4.3.4-kt
    # restart: always
    restart: unless-stopped
    # env_file: env
    env_file:
      - env
      - env-mastodon-shared
    command: bundle exec sidekiq
    depends_on:
      - db
      - redis
    # networks:
    #   - external_network
    #   - internal_network
    volumes:
      - ./public/system:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]

  cloudflared:
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run mastodon
    env_file:
      - env-cloudflared

  cloudflared-streaming:
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run mastodon-streaming
    env_file:
      - env-cloudflared-streaming

# networks:
#   external_network:
#   internal_network:
#     internal: true
